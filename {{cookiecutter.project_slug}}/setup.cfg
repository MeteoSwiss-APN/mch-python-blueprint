
[metadata]
name = {{ cookiecutter.project_slug }}
version = {{ cookiecutter.version }}
description = {{ cookiecutter.project_short_description }}
description-file =
	README.rst
	HISTORY.rst
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
license_files =
	LICENSE.txt
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
keywords = {{ cookiecutter.project_slug }}
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7

[options]
package_dir =
    = src
packages = find:
include_package_data = True
test_suite =
    tests
requires-python = >= 3.7
zip_safe = False
setup_requires =
install_requires =
    Click >= 6.0
test_requires =
    pytest
    pytest-cov

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }} = {{ cookiecutter.project_slug }}.cli:main

# [bumpversion]
# Moved to ``.bumpversion.cfg`` because bumpversion rewrites its setup file,
# which leads to some format changes and the removal of all comments (!).

[bdist_wheel]
universal = 1

[tool:black]

[tool:isort]
force_grid_wrap=0
include_trailing_comma=True
line_length=88
multi_line_output=3
use_parentheses=True

[flake8]
exclude = docs
max-line-length = 88
ignore =
    E203, # Allow whitespace before ':'
          # See https://github.com/PyCQA/pycodestyle/issues/373
    W503, # Allow line break before binary operator (PEP 8-compatible)

[tool:pytest]
collect_ignore = ['setup.py']
testpaths = tests
addopts =
    -s
    -rs
    --cov-config=setup.cfg

[tox:tox]
envlist =
    py37
    flake8

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
install_command =
    pip install -U {opts} {packages}
deps =
    pytest
# Uncomment to run tox with pinned package versions specified in requirements.txt:
#    -r{toxinidir}/requirements.txt
commands =
    pytest --basetemp={envtmpdir} --junitxml=junit-{envname}.xml

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 src tests

